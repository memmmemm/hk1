--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.4) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v67=v2(v0(v30,16));if v19 then local v74=v5(v67,v19);v19=nil;return v74;else return v67;end end end);local function v20(v31,v32,v33) if v33 then local v68=(v31/((5 -3)^(v32-(2 -1))))%(2^(((v33-(1 -0)) -(v32-1)) + ((1 + 1) -1))) ;return v68-(v68%(620 -(555 + (941 -(282 + 595))))) ;else local v69=(933 -(857 + 74))^(v32-(569 -(367 + (1838 -(1523 + 114))))) ;return (((v31%(v69 + v69))>=v69) and (928 -(214 + 713))) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -((1183 -(892 + 65)) + 1044)) );v18=v18 + (17 -13) ;return (v40 * (16777333 -(32 + 85))) + (v39 * ((153212 -88986) + 1310)) + (v38 * (57 + 199)) + v37 ;end local function v24() local v41=(0 -0) -0 ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(0 -(0 + 0))) then v42=v23();v43=v23();v41=351 -(87 + 263) ;end if (v41==(183 -(67 + (199 -86)))) then if (v46==(0 + 0)) then if (v45==(0 -0)) then return v47 * (0 + 0) ;else local v97=0 -0 ;while true do if (v97==((1390 -(145 + 293)) -(802 + 150))) then v46=(432 -(44 + 386)) -(1487 -(998 + 488)) ;v44=0;break;end end end elseif (v46==(651 + 1396)) then return ((v45==((0 + 0) -0)) and (v47 * ((1 + 0)/(997 -((1687 -(201 + 571)) + 82))))) or (v47 * NaN) ;end return v8(v47,v46-(2896 -1873) ) * (v44 + (v45/((2 + 0)^((1206 -(116 + 1022)) -16)))) ;end if (v41==2) then v46=v20(v43,1208 -(1069 + 118) ,70 -(162 -123) );v47=((v20(v43,69 -37 )==1) and  -(1 + 0 + 0)) or 1 ;v41=4 -1 ;end if (v41==1) then v44=1 + 0 ;v45=(v20(v43,792 -(368 + 423) ,62 -(153 -111) ) * ((20 -(10 + 8))^(122 -90))) + v42 ;v41=(1576 -1132) -(416 + 26) ;end end end local function v25(v48) local v49=859 -(814 + 45) ;local v50;local v51;while true do if (v49==(2 -1)) then v50=v3(v16,v18,(v18 + v48) -(1 + (1055 -(87 + 968))) );v18=v18 + v48 ;v49=(4 -3) + 1 + 0 ;end if (v49==(885 -(261 + 624))) then v50=nil;if  not v48 then local v93=1913 -((4043 -2254) + 124) ;while true do if (v93==(766 -((2158 -(447 + 966)) + 21))) then v48=v23();if (v48==((0 -0) + 0)) then return "";end break;end end end v49=1 -0 ;end if (v49==(11 -8)) then return v6(v51);end if (v49==(1082 -((2837 -(1703 + 114)) + 60))) then v51={};for v75=1424 -(630 + 793) , #v50 do v51[v75]=v2(v1(v3(v50,v75,v75)));end v49=3;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (1==v52) then v55=nil;v56=nil;v52=2;end if ((5 -2)==v52) then v59=nil;while true do local v77=0 + 0 ;local v78;while true do if (0==v77) then v78=0;while true do if (v78~=(1467 -(899 + 568))) then else local v102=0 + 0 ;while true do if (v102==(0 + 0)) then if (v53==(0 -0)) then v54={};v55={};v56={};v53=604 -(268 + 335) ;end if (v53==(293 -(60 + 230))) then local v105=572 -(426 + 146) ;local v106;while true do if ((0 + 0)~=v105) then else v106=0 -0 ;while true do if (0==v106) then local v327=1456 -(282 + 1174) ;while true do if (v327==(811 -(569 + 242))) then for v390=1 + 0 ,v23() do v55[v390-(2 -1) ]=v28();end return v57;end end end end break;end end end v102=1 + 0 ;end if (v102~=(754 -(239 + 514))) then else v78=1025 -(706 + 318) ;break;end end end if (v78==(1252 -(721 + 530))) then if (v53==(1330 -(797 + 532))) then local v103=0 + 0 ;while true do if (v103~=(1272 -(945 + 326))) then else v59={};v53=4 -2 ;break;end if (v103~=(0 -0)) then else v57={v54,v55,nil,v56};v58=v23();v103=701 -(271 + 429) ;end end end if (v53==(2 + 0)) then local v104=0;while true do if (v104~=(0 + 0)) then else for v108=1501 -(1408 + 92) ,v58 do local v109=0;local v110;local v111;local v112;while true do if (v109==1) then v112=nil;while true do if (v110~=0) then else local v356=1086 -(461 + 625) ;local v357;while true do if (v356==(1288 -(993 + 295))) then v357=238 -(64 + 174) ;while true do if (1~=v357) then else v110=1 + 0 ;break;end if (v357==(0 + 0)) then local v398=0;while true do if ((1172 -(418 + 753))==v398) then v357=1;break;end if (v398~=(336 -(144 + 192))) then else v111=v21();v112=nil;v398=217 -(42 + 174) ;end end end end break;end end end if (1~=v110) then else if (v111==1) then v112=v21()~=0 ;elseif (v111==(1 + 1)) then v112=v24();elseif (v111==(1 + 2)) then v112=v25();end v59[v108]=v112;break;end end break;end if (v109==(0 + 0)) then v110=0 + 0 ;v111=nil;v109=1;end end end v57[532 -(406 + 123) ]=v21();v104=1770 -(1749 + 20) ;end if (v104==(1 + 0)) then for v113=2 -1 ,v23() do local v114=0;local v115;local v116;local v117;local v118;while true do if (v114~=(1322 -(1249 + 73))) then else v115=0 + 0 ;v116=nil;v114=1976 -(1913 + 62) ;end if (v114~=(2 + 0)) then else while true do if (0==v115) then local v359=1145 -(466 + 679) ;while true do if (v359==(1934 -(565 + 1368))) then v115=2 -1 ;break;end if (v359~=(1661 -(1477 + 184))) then else v116=0 -0 ;v117=nil;v359=1901 -(106 + 1794) ;end end end if (v115==(1 + 0)) then v118=nil;while true do if ((0 + 0)==v116) then local v392=0;while true do if (v392==0) then v117=0 -0 ;v118=nil;v392=1 + 0 ;end if (v392==(2 -1)) then v116=1;break;end end end if (v116==(1 -0)) then while true do if (v117~=(0 -0)) then else v118=v21();if (v20(v118,1,1)~=(114 -(4 + 110))) then else local v399=584 -(57 + 527) ;local v400;local v401;local v402;local v403;while true do if (v399==(476 -(41 + 435))) then v400=1427 -(41 + 1386) ;v401=nil;v399=104 -(17 + 86) ;end if (v399~=(1 + 0)) then else v402=nil;v403=nil;v399=3 -1 ;end if ((2 + 0)==v399) then while true do if (v400==(5 -3)) then local v404=0;while true do if (v404==1) then v400=169 -(122 + 44) ;break;end if (v404~=(0 + 0)) then else if (v20(v402,1,1 -0 )~=1) then else v403[2 + 0 ]=v59[v403[6 -4 ]];end if (v20(v402,2 + 0 ,1 + 1 )~=1) then else v403[270 -(176 + 91) ]=v59[v403[7 -4 ]];end v404=1;end end end if (v400==(4 -1)) then if (v20(v402,3,1095 -(975 + 117) )==(1 -0)) then v403[69 -(30 + 35) ]=v59[v403[4]];end v54[v113]=v403;break;end if (v400~=(1 + 0)) then else local v406=0 + 0 ;while true do if ((1258 -(1043 + 214))==v406) then v400=7 -5 ;break;end if (v406==(0 -0)) then v403={v22(),v22(),nil,nil};if (v401==(0 -0)) then local v415=580 -(361 + 219) ;local v416;local v417;while true do if ((0 -0)~=v415) then else v416=0 -0 ;v417=nil;v415=321 -(53 + 267) ;end if (v415~=(1228 -(322 + 905))) then else while true do if (v416~=(0 + 0)) then else v417=413 -(15 + 398) ;while true do if (v417==(982 -(18 + 964))) then v403[1192 -(449 + 740) ]=v22();v403[14 -10 ]=v22();break;end end break;end end break;end end elseif (v401==(1 + 0)) then v403[875 -(826 + 46) ]=v23();elseif (v401==(949 -(245 + 702))) then v403[9 -6 ]=v23() -((2 + 0)^16) ;elseif (v401==(853 -(20 + 830))) then local v421=0;local v422;while true do if ((0 + 0)~=v421) then else v422=126 -(116 + 10) ;while true do if (v422==0) then v403[1 + 2 ]=v23() -(2^(754 -(542 + 196))) ;v403[8 -4 ]=v22();break;end end break;end end end v406=1 + 0 ;end end end if (v400==(0 -0)) then local v407=0 -0 ;local v408;while true do if (v407~=0) then else v408=0 + 0 ;while true do if (v408==0) then local v418=0 + 0 ;while true do if (v418~=(0 + 0)) then else v401=v20(v118,2,7 -4 );v402=v20(v118,9 -5 ,6);v418=1691 -(1121 + 569) ;end if ((1552 -(1126 + 425))==v418) then v408=406 -(118 + 287) ;break;end end end if (v408==(3 -2)) then v400=1464 -(1404 + 59) ;break;end end break;end end end end break;end end end break;end end break;end end break;end end break;end if (v114==1) then v117=nil;v118=nil;v114=5 -3 ;end end end v53=1124 -(118 + 1003) ;break;end end end break;end end break;end end end break;end if ((0 -0)~=v52) then else local v70=377 -(142 + 235) ;while true do if (v70~=(4 -3)) then else v52=1;break;end if (v70==(0 -0)) then v53=0 -0 ;v54=nil;v70=1 + 0 ;end end end if (v52~=2) then else v57=nil;v58=nil;v52=980 -(553 + 424) ;end end end local function v29(v60,v61,v62) local v63=0;local v64;local v65;local v66;while true do if (1==v63) then v66=v60[3];return function(...) local v79=v64;local v80=v65;local v81=v66;local v82=v27;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v12("#",...) -1 ;local v88={};local v89={};for v94=0,v87 do if (v94>=v81) then v85[v94-v81 ]=v86[v94 + 1 ];else v89[v94]=v86[v94 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do v91=v79[v83];v92=v91[1];if (v92<=39) then if (v92<=19) then if (v92<=9) then if (v92<=4) then if (v92<=1) then if (v92==0) then local v119=v91[2];v89[v119]=v89[v119](v89[v119 + 1 ]);else local v121=v91[2];local v122,v123=v82(v89[v121](v13(v89,v121 + 1 ,v91[3])));v84=(v123 + v121) -1 ;local v124=0;for v203=v121,v84 do local v204=0;while true do if (0==v204) then v124=v124 + 1 ;v89[v203]=v122[v124];break;end end end end elseif (v92<=2) then for v205=v91[2],v91[3] do v89[v205]=nil;end elseif (v92>3) then local v236=v91[2];local v237=v89[v91[3]];v89[v236 + 1 ]=v237;v89[v236]=v237[v91[4]];else v89[v91[2]]=v89[v91[3]] + v91[4] ;end elseif (v92<=6) then if (v92>5) then local v125=v91[2];v89[v125](v13(v89,v125 + 1 ,v91[3]));else local v126=v91[3];local v127=v89[v126];for v207=v126 + 1 ,v91[4] do v127=v127   .. v89[v207] ;end v89[v91[2]]=v127;end elseif (v92<=7) then v89[v91[2]]=v91[3];elseif (v92>8) then v62[v91[3]]=v89[v91[2]];else local v244=0;local v245;while true do if (v244==0) then v245=v91[2];v89[v245]=v89[v245]();break;end end end elseif (v92<=14) then if (v92<=11) then if (v92==10) then local v131=v91[2];local v132={};for v208=1, #v88 do local v209=v88[v208];for v246=0, #v209 do local v247=v209[v246];local v248=v247[1];local v249=v247[2];if ((v248==v89) and (v249>=v131)) then v132[v249]=v248[v249];v247[1]=v132;end end end elseif  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=12) then local v133=0;local v134;local v135;local v136;while true do if (v133==0) then v134=v91[2];v135={v89[v134](v89[v134 + 1 ])};v133=1;end if (v133==1) then v136=0;for v333=v134,v91[4] do local v334=0;while true do if (v334==0) then v136=v136 + 1 ;v89[v333]=v135[v136];break;end end end break;end end elseif (v92==13) then local v251=v91[2];local v252=v91[4];local v253=v251 + 2 ;local v254={v89[v251](v89[v251 + 1 ],v89[v253])};for v309=1,v252 do v89[v253 + v309 ]=v254[v309];end local v255=v254[1];if v255 then local v335=0;while true do if (v335==0) then v89[v253]=v255;v83=v91[3];break;end end else v83=v83 + 1 ;end else local v256=v91[3];local v257=v89[v256];for v312=v256 + 1 ,v91[4] do v257=v257   .. v89[v312] ;end v89[v91[2]]=v257;end elseif (v92<=16) then if (v92==15) then v89[v91[2]]=v29(v80[v91[3]],nil,v62);else v89[v91[2]]=v91[3]~=0 ;end elseif (v92<=17) then v61[v91[3]]=v89[v91[2]];elseif (v92==18) then local v259=0;local v260;while true do if (v259==0) then v260=v91[2];v89[v260](v89[v260 + 1 ]);break;end end else v62[v91[3]]=v89[v91[2]];end elseif (v92<=29) then if (v92<=24) then if (v92<=21) then if (v92==20) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v141=v91[2];v89[v141]=v89[v141](v13(v89,v141 + 1 ,v91[3]));end elseif (v92<=22) then v89[v91[2]][v91[3]]=v89[v91[4]];elseif (v92>23) then local v264=v91[2];v89[v264]=v89[v264](v13(v89,v264 + 1 ,v84));else v89[v91[2]]=v89[v91[3]][v91[4]];end elseif (v92<=26) then if (v92==25) then do return;end else v89[v91[2]]=v91[3]~=0 ;end elseif (v92<=27) then local v146=0;local v147;while true do if (v146==0) then v147=v91[2];v89[v147]=v89[v147](v13(v89,v147 + 1 ,v84));break;end end elseif (v92>28) then do return;end else local v268=0;local v269;local v270;local v271;while true do if (v268==0) then v269=v91[2];v270={v89[v269](v13(v89,v269 + 1 ,v84))};v268=1;end if (v268==1) then v271=0;for v373=v269,v91[4] do v271=v271 + 1 ;v89[v373]=v270[v271];end break;end end end elseif (v92<=34) then if (v92<=31) then if (v92>30) then local v148=v80[v91[3]];local v149;local v150={};v149=v10({},{__index=function(v210,v211) local v212=0;local v213;while true do if (v212==0) then v213=v150[v211];return v213[1][v213[2]];end end end,__newindex=function(v214,v215,v216) local v217=v150[v215];v217[1][v217[2]]=v216;end});for v219=1,v91[4] do v83=v83 + 1 ;local v220=v79[v83];if (v220[1]==76) then v150[v219-1 ]={v89,v220[3]};else v150[v219-1 ]={v61,v220[3]};end v88[ #v88 + 1 ]=v150;end v89[v91[2]]=v29(v148,v149,v62);else v83=v91[3];end elseif (v92<=32) then v89[v91[2]]=v62[v91[3]];elseif (v92==33) then local v272=v91[2];local v273={};for v317=1, #v88 do local v318=v88[v317];for v337=0, #v318 do local v338=0;local v339;local v340;local v341;while true do if (v338==1) then v341=v339[2];if ((v340==v89) and (v341>=v272)) then v273[v341]=v340[v341];v339[1]=v273;end break;end if (v338==0) then v339=v318[v337];v340=v339[1];v338=1;end end end end else v89[v91[2]]();end elseif (v92<=36) then if (v92==35) then v89[v91[2]]=v61[v91[3]];else v89[v91[2]]=v91[3];end elseif (v92<=37) then local v159=0;local v160;while true do if (0==v159) then v160=v91[2];v89[v160](v13(v89,v160 + 1 ,v91[3]));break;end end elseif (v92>38) then v89[v91[2]]=v89[v91[3]] + v89[v91[4]] ;elseif (v89[v91[2]]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=59) then if (v92<=49) then if (v92<=44) then if (v92<=41) then if (v92>40) then local v161=v91[2];v89[v161](v89[v161 + 1 ]);else v89[v91[2]]();end elseif (v92<=42) then local v162=v91[2];v89[v162]=v89[v162](v89[v162 + 1 ]);elseif (v92>43) then if (v89[v91[2]]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]=v89[v91[3]][v91[4]];end elseif (v92<=46) then if (v92==45) then v89[v91[2]]=v29(v80[v91[3]],nil,v62);elseif (v91[2]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=47) then v89[v91[2]][v91[3]]=v91[4];elseif (v92==48) then if (v91[2]<=v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]={};end elseif (v92<=54) then if (v92<=51) then if (v92>50) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=52) then v89[v91[2]]=v62[v91[3]];elseif (v92==53) then v89[v91[2]][v91[3]]=v91[4];else v89[v91[2]][v91[3]]=v89[v91[4]];end elseif (v92<=56) then if (v92>55) then local v169=v80[v91[3]];local v170;local v171={};v170=v10({},{__index=function(v222,v223) local v224=v171[v223];return v224[1][v224[2]];end,__newindex=function(v225,v226,v227) local v228=0;local v229;while true do if (v228==0) then v229=v171[v226];v229[1][v229[2]]=v227;break;end end end});for v230=1,v91[4] do v83=v83 + 1 ;local v231=v79[v83];if (v231[1]==76) then v171[v230-1 ]={v89,v231[3]};else v171[v230-1 ]={v61,v231[3]};end v88[ #v88 + 1 ]=v171;end v89[v91[2]]=v29(v169,v170,v62);else local v173=0;local v174;local v175;local v176;local v177;while true do if (0==v173) then v174=v91[2];v175,v176=v82(v89[v174](v89[v174 + 1 ]));v173=1;end if (v173==1) then v84=(v176 + v174) -1 ;v177=0;v173=2;end if (v173==2) then for v347=v174,v84 do v177=v177 + 1 ;v89[v347]=v175[v177];end break;end end end elseif (v92<=57) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>58) then local v286=0;local v287;local v288;local v289;local v290;while true do if (v286==2) then for v376=v287,v84 do local v377=0;while true do if (v377==0) then v290=v290 + 1 ;v89[v376]=v288[v290];break;end end end break;end if (0==v286) then v287=v91[2];v288,v289=v82(v89[v287](v89[v287 + 1 ]));v286=1;end if (v286==1) then v84=(v289 + v287) -1 ;v290=0;v286=2;end end elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=69) then if (v92<=64) then if (v92<=61) then if (v92==60) then local v178=0;local v179;local v180;local v181;local v182;while true do if (v178==0) then v179=v91[2];v180,v181=v82(v89[v179](v13(v89,v179 + 1 ,v91[3])));v178=1;end if (2==v178) then for v351=v179,v84 do v182=v182 + 1 ;v89[v351]=v180[v182];end break;end if (v178==1) then v84=(v181 + v179) -1 ;v182=0;v178=2;end end else v89[v91[2]]={};end elseif (v92<=62) then v89[v91[2]]=v89[v91[3]];elseif (v92==63) then local v291=v91[2];v89[v291]=v89[v291](v13(v89,v291 + 1 ,v91[3]));else local v293=v91[2];v89[v293](v13(v89,v293 + 1 ,v84));end elseif (v92<=66) then if (v92==65) then local v186=v91[2];v89[v186](v13(v89,v186 + 1 ,v84));else v83=v91[3];end elseif (v92<=67) then v89[v91[2]]=v61[v91[3]];elseif (v92>68) then for v324=v91[2],v91[3] do v89[v324]=nil;end else v89[v91[2]]=v89[v91[3]] + v89[v91[4]] ;end elseif (v92<=74) then if (v92<=71) then if (v92>70) then local v190=v91[2];v89[v190]=v89[v190]();elseif  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=72) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==73) then v89[v91[2]]=v89[v91[3]] + v91[4] ;else v61[v91[3]]=v89[v91[2]];end elseif (v92<=76) then if (v92==75) then local v192=0;local v193;local v194;local v195;while true do if (v192==0) then v193=v91[2];v194={v89[v193](v13(v89,v193 + 1 ,v84))};v192=1;end if (v192==1) then v195=0;for v354=v193,v91[4] do local v355=0;while true do if (v355==0) then v195=v195 + 1 ;v89[v354]=v194[v195];break;end end end break;end end else v89[v91[2]]=v89[v91[3]];end elseif (v92<=77) then local v198=v91[2];local v199=v91[4];local v200=v198 + 2 ;local v201={v89[v198](v89[v198 + 1 ],v89[v200])};for v233=1,v199 do v89[v200 + v233 ]=v201[v233];end local v202=v201[1];if v202 then local v300=0;while true do if (v300==0) then v89[v200]=v202;v83=v91[3];break;end end else v83=v83 + 1 ;end elseif (v92>78) then local v301=0;local v302;local v303;while true do if (v301==1) then v89[v302 + 1 ]=v303;v89[v302]=v303[v91[4]];break;end if (v301==0) then v302=v91[2];v303=v89[v91[3]];v301=1;end end else local v304=0;local v305;local v306;local v307;while true do if (v304==1) then v307=0;for v378=v305,v91[4] do v307=v307 + 1 ;v89[v378]=v306[v307];end break;end if (v304==0) then v305=v91[2];v306={v89[v305](v89[v305 + 1 ])};v304=1;end end end v83=v83 + 1 ;end end;end if (0==v63) then v64=v60[1];v65=v60[2];v63=1;end end end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
